global !p

def relpath():
  return os.path.relpath(path, os.getcwd())

def guard_name():
  return re.sub(r'(\.|/|$)', '_', relpath()).upper()

def class_name():
  return re.sub(r'(?:^|_)(.)', lambda m: m.group(1).upper(), snip.basename)

endglobal

snippet newh "New header file snippet."
// Copyright `date +%Y` The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef `!p snip.rv = guard_name()`
#define `!p snip.rv = guard_name()`

#include "base/macros.h"

class `!p snip.rv = class_name()` {
 public:
  `!p snip.rv = class_name()`();
  virtual ~`!p snip.rv = class_name()`();

 private:
  DISALLOW_COPY_AND_ASSIGN(`!p snip.rv = class_name()`);
};

#endif  // `!p snip.rv = guard_name()`
endsnippet

snippet newcc "New cc file snippet."
// Copyright `date +%Y` The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#include "`!p snip.rv = re.sub(r'\.cc$', '.h', relpath())`"

`!p snip.rv = class_name()`::`!p snip.rv = class_name()`() {}

`!p snip.rv = class_name()`::~`!p snip.rv = class_name()`() {}
endsnippet

snippet ns "Puts selected text into namespace."
namespace${1:} {
${VISUAL}
}  // namespace$1
endsnippet
